int find_lower_bound(vector<int>,int, int,int,int);

int lowerBound(vector<int> arr, int n, int x) {
	int start=0;
	int end=n-1;
	int target=x;
	int index=-1;
	int k=find_lower_bound(arr,start,end,target,index);
	return k;
}
int find_lower_bound(vector<int> a,int start, int end, int target,int index)
{
  
  
  if(start<=end)
  {
      int mid=(start+end)/2;
      if(a[mid]==target)
      {
            index=mid;
            return index;
      }
      if(a[mid]>target)
      {
          index=mid;
          return find_lower_bound(a,start,mid-1,target,index);
      }
      else if(a[mid]<target)
      {
          return find_lower_bound(a,mid+1,end,target,index);
      }
  }
  else
        return index;
  
  
  
  
  
}
