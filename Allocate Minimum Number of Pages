

int allocate_book(vector<int>& , int , int ,int );
int max_element(vector<int>& , int );
int sum(vector<int>& , int );


int findPages(vector<int>& a, int n, int m) {
    int start=max_element(a , n);
    int end=sum(a, n);
    int res;

    if(m>n)
        return -1;
    while(start<=end)
    {
        int mid=(start+end)/2;
        int check=allocate_book(a,mid,n,m);
        if(check==1)
        {
            start=mid+1;
        }
        else
        {
            res=mid;
            end=mid-1;
        }
    }

    return res;



}

int sum(vector<int>& a, int n)
{
    int sum=0;
    for(int i=0;i<n;i++)
    {
        sum=sum+a[i];
    }

    return sum;
}

int max_element(vector<int>&a , int n)
{
    int max=a[0];
    for(int i=0;i<n;i++)
    {
        if(a[i]>max)
        {
            max=a[i];
        }
    }
    return max;
}

int allocate_book(vector<int>& a, int mid, int n,int m)
{
    int students=0;
    int sum=0;
    for(int i=0;i<n;i++)
    {
        sum=sum+a[i];
        if(sum>mid)
        {
            sum=0;
            i--;
            students++;
        }
    }
    students++;
    if(students>m)
        return 1;
    else
        return -1;

}
